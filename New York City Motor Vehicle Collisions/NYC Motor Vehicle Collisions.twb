<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1206.1554                               -->
<workbook original-version='10.4' source-build='10.4.2 (10400.17.1206.1554)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.4'>
      <aliases enabled='yes' />
      <column caption='Time Parameter 2' datatype='integer' name='[Time Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0'>
        <calculation class='tableau' formula='0' />
        <range granularity='3' max='24' />
      </column>
      <column caption='Time Parameter' datatype='datetime' name='[Time Parameter]' param-domain-type='range' role='measure' type='quantitative' value='#03:00:00#'>
        <calculation class='tableau' formula='#1899-12-30 03:00:00#' />
        <range granularity='3' max='#23:59:00#' min='#00:00:00#' period-type='hour' />
      </column>
    </datasource>
    <datasource caption='NYPD_Motor_Vehicle_Collisions' inline='true' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NYPD_Motor_Vehicle_Collisions' name='textscan.0m169uh1torfnt130migo1trcaek'>
            <connection class='textscan' directory='E:/Tableau/New York City Motor Vehicle Collisions/NYC Motor Vehicle Collisions.twb Files/Data/Tableau' filename='NYPD_Motor_Vehicle_Collisions.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0m169uh1torfnt130migo1trcaek' name='NYPD_Motor_Vehicle_Collisions.csv' table='[NYPD_Motor_Vehicle_Collisions#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='DATE' ordinal='0' />
            <column datatype='datetime' name='TIME' ordinal='1' />
            <column datatype='string' name='BOROUGH' ordinal='2' />
            <column datatype='integer' name='ZIP CODE' ordinal='3' />
            <column datatype='real' name='LATITUDE' ordinal='4' />
            <column datatype='real' name='LONGITUDE' ordinal='5' />
            <column datatype='string' name='LOCATION' ordinal='6' />
            <column datatype='string' name='ON STREET NAME' ordinal='7' />
            <column datatype='string' name='CROSS STREET NAME' ordinal='8' />
            <column datatype='string' name='OFF STREET NAME' ordinal='9' />
            <column datatype='integer' name='NUMBER OF PERSONS INJURED' ordinal='10' />
            <column datatype='integer' name='NUMBER OF PERSONS KILLED' ordinal='11' />
            <column datatype='integer' name='NUMBER OF PEDESTRIANS INJURED' ordinal='12' />
            <column datatype='integer' name='NUMBER OF PEDESTRIANS KILLED' ordinal='13' />
            <column datatype='integer' name='NUMBER OF CYCLIST INJURED' ordinal='14' />
            <column datatype='integer' name='NUMBER OF CYCLIST KILLED' ordinal='15' />
            <column datatype='integer' name='NUMBER OF MOTORIST INJURED' ordinal='16' />
            <column datatype='integer' name='NUMBER OF MOTORIST KILLED' ordinal='17' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 1' ordinal='18' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 2' ordinal='19' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 3' ordinal='20' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 4' ordinal='21' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 5' ordinal='22' />
            <column datatype='integer' name='UNIQUE KEY' ordinal='23' />
            <column datatype='string' name='VEHICLE TYPE CODE 1' ordinal='24' />
            <column datatype='string' name='VEHICLE TYPE CODE 2' ordinal='25' />
            <column datatype='string' name='VEHICLE TYPE CODE 3' ordinal='26' />
            <column datatype='string' name='VEHICLE TYPE CODE 4' ordinal='27' />
            <column datatype='string' name='VEHICLE TYPE CODE 5' ordinal='28' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME</remote-name>
            <remote-type>134</remote-type>
            <local-name>[TIME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>TIME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;duration&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BOROUGH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BOROUGH]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>BOROUGH</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP CODE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>ZIP CODE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOCATION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LOCATION]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>LOCATION</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ON STREET NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ON STREET NAME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>ON STREET NAME</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CROSS STREET NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CROSS STREET NAME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>CROSS STREET NAME</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OFF STREET NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OFF STREET NAME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>OFF STREET NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PERSONS INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PERSONS INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>NUMBER OF PERSONS INJURED</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PERSONS KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PERSONS KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>NUMBER OF PERSONS KILLED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PEDESTRIANS INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PEDESTRIANS INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>NUMBER OF PEDESTRIANS INJURED</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PEDESTRIANS KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PEDESTRIANS KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>NUMBER OF PEDESTRIANS KILLED</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF CYCLIST INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF CYCLIST INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>NUMBER OF CYCLIST INJURED</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF CYCLIST KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF CYCLIST KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>NUMBER OF CYCLIST KILLED</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF MOTORIST INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF MOTORIST INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>NUMBER OF MOTORIST INJURED</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF MOTORIST KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF MOTORIST KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>NUMBER OF MOTORIST KILLED</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 1]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 1</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 2]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 3]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 3</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 4]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 4</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 5]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 5</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIQUE KEY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UNIQUE KEY]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>UNIQUE KEY</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 1]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 2]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 3]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 3</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 4]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 4</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 5]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 5</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NYPD_Motor_Vehicle_Collisions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_324259197382397952:qk]&quot;' value='Total' />
          <alias key='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814617093:qk]&quot;' value='Cyclist' />
          <alias key='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814731782:qk]&quot;' value='Motorist' />
          <alias key='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814838279:qk]&quot;' value='Pedestrian' />
          <alias key='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF CYCLIST KILLED:qk]&quot;' value='Cyclists' />
          <alias key='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF MOTORIST KILLED:qk]&quot;' value='Motorists' />
          <alias key='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF PEDESTRIANS KILLED:qk]&quot;' value='Pedestrians' />
        </aliases>
      </column>
      <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Unknown' />
        </aliases>
      </column>
      <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 2' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 2]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 3' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 3]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 4' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 4]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 5' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 5]' role='dimension' type='nominal' />
      <column caption='Cross Street Name' datatype='string' name='[CROSS STREET NAME]' role='dimension' type='nominal' />
      <column caption='People Killed' datatype='integer' name='[Calculation_324259197382397952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF CYCLIST KILLED]+[NUMBER OF MOTORIST KILLED]+[NUMBER OF PEDESTRIANS KILLED]' />
      </column>
      <column caption='People Injured' datatype='integer' name='[Calculation_324259197391900673]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS INJURED]+[NUMBER OF MOTORIST INJURED]+[NUMBER OF CYCLIST INJURED]' />
      </column>
      <column caption='Calculation1' datatype='datetime' name='[Calculation_908038299800195073]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Time Parameter]' />
      </column>
      <column caption='Calculation2' datatype='integer' name='[Calculation_908038299802042370]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Time Parameter 2]' />
      </column>
      <column caption='Total' datatype='integer' name='[Calculation_908038299813294084]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_324259197391900673]+[Calculation_324259197382397952]' />
      </column>
      <column caption='TCyclists' datatype='integer' name='[Calculation_908038299814617093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF CYCLIST INJURED]+[NUMBER OF CYCLIST KILLED]' />
      </column>
      <column caption='TMotorist' datatype='integer' name='[Calculation_908038299814731782]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF MOTORIST INJURED]+[NUMBER OF MOTORIST KILLED]' />
      </column>
      <column caption='TPedestrian' datatype='integer' name='[Calculation_908038299814838279]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS INJURED]+[NUMBER OF PEDESTRIANS KILLED]' />
      </column>
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' semantic-role='[AreaCode].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
      <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
      <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
      <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Persons Killed' datatype='integer' name='[NUMBER OF PERSONS KILLED]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Off Street Name' datatype='string' name='[OFF STREET NAME]' role='dimension' type='nominal' />
      <column caption='On Street Name' datatype='string' name='[ON STREET NAME]' role='dimension' type='nominal' />
      <column caption='Time' datatype='datetime' name='[TIME]' role='dimension' type='ordinal' />
      <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
      <column caption='Vehicle Type Code 1' datatype='string' name='[VEHICLE TYPE CODE 1]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 2' datatype='string' name='[VEHICLE TYPE CODE 2]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 3' datatype='string' name='[VEHICLE TYPE CODE 3]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 4' datatype='string' name='[VEHICLE TYPE CODE 4]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 5' datatype='string' name='[VEHICLE TYPE CODE 5]' role='dimension' type='nominal' />
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Calculation_324259197382397952]' derivation='Sum' name='[cum:sum:Calculation_324259197382397952:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[hr:TIME:ok]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_324259197382397952]' derivation='Sum' name='[cum:sum:Calculation_324259197382397952:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_324259197382397952]' derivation='Sum' name='[cum:sum:Calculation_324259197382397952:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_324259197382397952]' derivation='Sum' name='[diff:cum:sum:Calculation_324259197382397952:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_324259197382397952]' derivation='Sum' name='[diff:sum:Calculation_324259197382397952:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[TIME]' derivation='Hour' name='[hr:TIME:ok]' pivot='key' type='ordinal' />
      <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
      <column-instance column='[CONTRIBUTING FACTOR VEHICLE 1]' derivation='None' name='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_324259197391900673]' derivation='Sum' name='[pcto:sum:Calculation_324259197391900673:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_324259197382397952]' derivation='Sum' name='[sum:Calculation_324259197382397952:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_324259197382397952]' derivation='Sum' name='[sum:Calculation_324259197382397952:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[Calculation_324259197391900673]' derivation='Sum' name='[sum:Calculation_324259197391900673:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_908038299813294084]' derivation='Sum' name='[sum:Calculation_908038299813294084:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_908038299814617093]' derivation='Sum' name='[sum:Calculation_908038299814617093:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_908038299814731782]' derivation='Sum' name='[sum:Calculation_908038299814731782:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_908038299814838279]' derivation='Sum' name='[sum:Calculation_908038299814838279:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NUMBER OF CYCLIST INJURED]' derivation='Sum' name='[sum:NUMBER OF CYCLIST INJURED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NUMBER OF CYCLIST KILLED]' derivation='Sum' name='[sum:NUMBER OF CYCLIST KILLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NUMBER OF MOTORIST KILLED]' derivation='Sum' name='[sum:NUMBER OF MOTORIST KILLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NUMBER OF PEDESTRIANS KILLED]' derivation='Sum' name='[sum:NUMBER OF PEDESTRIANS KILLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NUMBER OF PERSONS KILLED]' derivation='Sum' name='[sum:NUMBER OF PERSONS KILLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Borough)' hidden='true' name='[Action (Borough)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BOROUGH]' />
        </groupfilter>
      </group>
      <group caption='Action (Borough,Contributing Factor Vehicle 1)' hidden='true' name='[Action (Borough,Contributing Factor Vehicle 1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BOROUGH]' />
          <groupfilter function='level-members' level='[CONTRIBUTING FACTOR VEHICLE 1]' />
        </groupfilter>
      </group>
      <group caption='Action (Zip Code)' hidden='true' name='[Action (Zip Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ZIP CODE]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.549575' measure-ordering='alphabetic' measure-percentage='0.356941' parameter-percentage='0.0934844' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alcohol Involvement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Passenger Distraction&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Other Vehicular&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Unsafe Speed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Physical Disability&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Failure to Yield Right-of-Way&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pedestrian/Bicyclist/Other Pedestrian Error/Confusion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Driver Inattention/Distraction&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Traffic Control Disregarded&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814617093:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF CYCLIST KILLED:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF PERSONS KILLED:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[cum:sum:Calculation_324259197382397952:qk:1]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[cum:sum:Calculation_324259197382397952:qk:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[cum:sum:Calculation_324259197382397952:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[diff:cum:sum:Calculation_324259197382397952:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[diff:sum:Calculation_324259197382397952:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[pcto:sum:Calculation_324259197391900673:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_324259197382397952:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_324259197382397952:vtsum:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_324259197391900673:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814838279:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF PEDESTRIANS KILLED:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF CYCLIST INJURED:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814731782:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF MOTORIST KILLED:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:DATE:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2012</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2016</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2015</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2018</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2014</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2017</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:BOROUGH:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;QUEENS&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;MANHATTAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>%all%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BROOKLYN&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;STATEN ISLAND&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BRONX&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Time Parameter 2' datatype='integer' name='[Time Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0'>
          <calculation class='tableau' formula='0' />
          <range granularity='3' max='24' />
        </column>
        <column caption='Time Parameter' datatype='datetime' name='[Time Parameter]' param-domain-type='range' role='measure' type='quantitative' value='#03:00:00#'>
          <calculation class='tableau' formula='#1899-12-30 03:00:00#' />
          <range granularity='3' max='#23:59:00#' min='#00:00:00#' period-type='hour' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
      <datasources>
        <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' />
      </datasources>
      <datasource-dependencies datasource='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
        <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
        <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]'>
        <groupfilter function='level-members' level='[yr:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='NYC Vehicle Collisions' type='sheet' worksheet='Zip code stats' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='NYC Vehicle Collisions' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='NYC Vehicle Collisions' type='sheet' worksheet='Total' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='NYC Vehicle Collisions' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Detailed Borough stats' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Detailed Borough stats' />
      </command>
    </action>
    <action caption='Detailed description' name='[Action4]'>
      <source dashboard='NYC Vehicle Collisions' type='sheet'>
        <exclude-sheet name='Monthly stats' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Detailed Borough stats' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Detailed Borough stats' type='sheet' worksheet='Distribution per borough' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Detailed Borough stats' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Day wise distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Day wise Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown' />
              </aliases>
            </column>
            <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
            <column caption='People Killed' datatype='integer' name='[Calculation_324259197382397952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF CYCLIST KILLED]+[NUMBER OF MOTORIST KILLED]+[NUMBER OF PEDESTRIANS KILLED]' />
            </column>
            <column caption='People Injured' datatype='integer' name='[Calculation_324259197391900673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS INJURED]+[NUMBER OF MOTORIST INJURED]+[NUMBER OF CYCLIST INJURED]' />
            </column>
            <column caption='Total' datatype='integer' name='[Calculation_908038299813294084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_324259197391900673]+[Calculation_324259197382397952]' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[TIME]' role='dimension' type='ordinal' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[TIME]' derivation='Hour' name='[hr:TIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_908038299813294084]' derivation='Sum' name='[sum:Calculation_908038299813294084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Weekday' name='[wd:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]'>
            <groupfilter function='level-members' level='[BOROUGH]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough,Contributing Factor Vehicle 1)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[CONTRIBUTING FACTOR VEHICLE 1]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]'>
            <groupfilter function='level-members' level='[ZIP CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[wd:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough,Contributing Factor Vehicle 1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]' value='Weekday' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]</rows>
        <cols>([federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok] / [federated.0pq8amk0lhmnle1e0vrsz0fktlex].[hr:TIME:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Distribution per borough'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Distribution per borough</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown' />
              </aliases>
            </column>
            <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
            <column caption='TCyclists' datatype='integer' name='[Calculation_908038299814617093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF CYCLIST INJURED]+[NUMBER OF CYCLIST KILLED]' />
            </column>
            <column caption='TMotorist' datatype='integer' name='[Calculation_908038299814731782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF MOTORIST INJURED]+[NUMBER OF MOTORIST KILLED]' />
            </column>
            <column caption='TPedestrian' datatype='integer' name='[Calculation_908038299814838279]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS INJURED]+[NUMBER OF PEDESTRIANS KILLED]' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_908038299814617093]' derivation='Sum' name='[sum:Calculation_908038299814617093:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_908038299814731782]' derivation='Sum' name='[sum:Calculation_908038299814731782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_908038299814838279]' derivation='Sum' name='[sum:Calculation_908038299814838279:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUMBER OF PEDESTRIANS KILLED]' derivation='Sum' name='[sum:NUMBER OF PEDESTRIANS KILLED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Weekday' name='[wd:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814617093:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814731782:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814838279:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814617093:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814731782:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF PEDESTRIANS KILLED:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]'>
            <groupfilter function='level-members' level='[BOROUGH]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough,Contributing Factor Vehicle 1)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BOROUGH]' />
              <groupfilter function='level-members' level='[CONTRIBUTING FACTOR VEHICLE 1]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]'>
            <groupfilter function='level-members' level='[ZIP CODE]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[mn:DATE:ok]'>
            <groupfilter function='level-members' level='[mn:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[wd:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[:Measure Names]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[mn:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough,Contributing Factor Vehicle 1)]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]' value='Weekday'>
              <formatted-text>
                <run>Weekday</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Multiple Values]</rows>
        <cols>([federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk] / [federated.0pq8amk0lhmnle1e0vrsz0fktlex].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Major Cause for Accident'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Major Cause for Accidents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown' />
              </aliases>
            </column>
            <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
            <column caption='People Killed' datatype='integer' name='[Calculation_324259197382397952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF CYCLIST KILLED]+[NUMBER OF MOTORIST KILLED]+[NUMBER OF PEDESTRIANS KILLED]' />
            </column>
            <column caption='People Injured' datatype='integer' name='[Calculation_324259197391900673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS INJURED]+[NUMBER OF MOTORIST INJURED]+[NUMBER OF CYCLIST INJURED]' />
            </column>
            <column caption='Total' datatype='integer' name='[Calculation_908038299813294084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_324259197391900673]+[Calculation_324259197382397952]' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CONTRIBUTING FACTOR VEHICLE 1]' derivation='None' name='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_908038299813294084]' derivation='Sum' name='[sum:Calculation_908038299813294084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Weekday' name='[wd:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]'>
            <groupfilter function='level-members' level='[BOROUGH]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]'>
            <groupfilter function='level-members' level='[ZIP CODE]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' direction='DESC' using='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]' />
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[wd:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk] / [federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:CONTRIBUTING FACTOR VEHICLE 1:nk])</rows>
        <cols>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Monthly stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Monthly Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown' />
              </aliases>
            </column>
            <column caption='People Killed' datatype='integer' name='[Calculation_324259197382397952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF CYCLIST KILLED]+[NUMBER OF MOTORIST KILLED]+[NUMBER OF PEDESTRIANS KILLED]' />
            </column>
            <column caption='People Injured' datatype='integer' name='[Calculation_324259197391900673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS INJURED]+[NUMBER OF MOTORIST INJURED]+[NUMBER OF CYCLIST INJURED]' />
            </column>
            <column caption='Total' datatype='integer' name='[Calculation_908038299813294084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_324259197391900673]+[Calculation_324259197382397952]' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_908038299813294084]' derivation='Sum' name='[sum:Calculation_908038299813294084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]'>
            <groupfilter function='level-members' level='[BOROUGH]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]'>
            <groupfilter function='level-members' level='[ZIP CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]</rows>
        <cols>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[mn:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Distribution per borough</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown' />
              </aliases>
            </column>
            <column caption='People Killed' datatype='integer' name='[Calculation_324259197382397952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF CYCLIST KILLED]+[NUMBER OF MOTORIST KILLED]+[NUMBER OF PEDESTRIANS KILLED]' />
            </column>
            <column caption='People Injured' datatype='integer' name='[Calculation_324259197391900673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS INJURED]+[NUMBER OF MOTORIST INJURED]+[NUMBER OF CYCLIST INJURED]' />
            </column>
            <column caption='Total' datatype='integer' name='[Calculation_908038299813294084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_324259197391900673]+[Calculation_324259197382397952]' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_324259197382397952]' derivation='Sum' name='[sum:Calculation_324259197382397952:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Calculation_908038299813294084]' derivation='Sum' name='[sum:Calculation_908038299813294084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]'>
            <groupfilter function='level-members' level='[BOROUGH]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]'>
            <groupfilter function='level-members' level='[ZIP CODE]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[mn:DATE:ok]'>
            <groupfilter function='level-members' level='[mn:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:BOROUGH:nk]' />
              <groupfilter function='member' level='[none:BOROUGH:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' direction='DESC' using='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_324259197382397952:vtsum:qk]' />
          <slices>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[mn:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Zip Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true' total='true'>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</rows>
        <cols>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Zip code stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Zip code wise trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown' />
              </aliases>
            </column>
            <column caption='People Killed' datatype='integer' name='[Calculation_324259197382397952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF CYCLIST KILLED]+[NUMBER OF MOTORIST KILLED]+[NUMBER OF PEDESTRIANS KILLED]' />
            </column>
            <column caption='People Injured' datatype='integer' name='[Calculation_324259197391900673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS INJURED]+[NUMBER OF MOTORIST INJURED]+[NUMBER OF CYCLIST INJURED]' />
            </column>
            <column caption='Total' datatype='integer' name='[Calculation_908038299813294084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_324259197391900673]+[Calculation_324259197382397952]' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[ZIP CODE]' derivation='None' name='[none:ZIP CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_908038299813294084]' derivation='Sum' name='[sum:Calculation_908038299813294084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]'>
            <groupfilter function='level-members' level='[BOROUGH]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:ZIP CODE:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ZIP CODE:ok]' />
              <groupfilter function='member' level='[none:ZIP CODE:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Action (Borough)]</column>
            <column>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:ZIP CODE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Longitude (generated)]' field-type='quantitative' max='-8114463.77962243' min='-8319978.7988025136' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Latitude (generated)]' field-type='quantitative' max='5000748.0024410281' min='4937961.8838461218' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:ZIP CODE:ok]' value='false' />
            <format attr='break-on-special' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:ZIP CODE:ok]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:ZIP CODE:ok]' value='false' />
            <format attr='omit-on-special' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:ZIP CODE:ok]' />
              <color column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]' />
              <geometry column='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Latitude (generated)]</rows>
        <cols>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Detailed Borough stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Detailed Borough stats</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' />
      </datasources>
      <datasource-dependencies datasource='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
        <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
        <column-instance column='[DATE]' derivation='Weekday' name='[wd:DATE:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='27' param='vert' type='layout-flow' w='98620' x='690' y='1351'>
            <zone fixed-size='31' h='6587' id='26' is-fixed='true' type='title' w='98620' x='690' y='1351'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90711' id='24' param='horz' type='layout-flow' w='98620' x='690' y='7938'>
              <zone h='90711' id='22' type='layout-basic' w='98620' x='690' y='7938'>
                <zone h='90711' id='18' param='vert' type='layout-flow' w='53620' x='690' y='7938'>
                  <zone h='90711' id='16' param='horz' type='layout-flow' w='53620' x='690' y='7938'>
                    <zone h='90711' id='14' type='layout-basic' w='53620' x='690' y='7938'>
                      <zone h='35319' id='5' param='horz' type='layout-flow' w='53620' x='690' y='11640'>
                        <zone fixed-size='550' h='35319' id='3' is-fixed='true' type='layout-basic' w='53620' x='690' y='11640'>
                          <zone h='35319' id='1' name='Distribution per borough' w='53620' x='690' y='11640'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone h='3702' id='12' type='empty' w='53620' x='690' y='7938'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46284' id='13' name='Day wise distribution' w='53620' x='690' y='52365'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='5406' id='20' type='empty' w='53620' x='690' y='46959'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='90711' id='21' name='Major Cause for Accident' w='41793' x='57517' y='7938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='90711' id='25' type='empty' w='3207' x='54310' y='7938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4223' id='10' mode='slider' name='Distribution per borough' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]' type='filter' w='28732' x='949' y='7770'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='NYC Vehicle Collisions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New York City Motor Vehicle Collisions</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.0pq8amk0lhmnle1e0vrsz0fktlex' />
      </datasources>
      <datasource-dependencies datasource='federated.0pq8amk0lhmnle1e0vrsz0fktlex'>
        <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
        <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='31' param='horz' type='layout-flow' w='98614' x='693' y='1351'>
            <zone h='97298' id='26' param='vert' type='layout-flow' w='98614' x='693' y='1351'>
              <zone h='7094' id='25' type='title' w='98614' x='693' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='90204' id='24' type='layout-basic' w='98614' x='693' y='8445'>
                <zone h='38683' id='17' param='horz' type='layout-flow' w='98614' x='693' y='14865'>
                  <zone h='38683' id='5' param='horz' type='layout-flow' w='98614' x='693' y='14865'>
                    <zone h='38683' id='3' type='layout-basic' w='98614' x='693' y='14865'>
                      <zone h='38683' id='9' name='Zip code stats' w='49349' x='49958' y='14865'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='38683' id='20' name='Total' w='46504' x='693' y='14865'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='38683' id='27' type='empty' w='2761' x='47197' y='14865'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='39696' id='22' name='Monthly stats' w='98614' x='693' y='58953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6420' id='23' type='empty' w='98614' x='693' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='5405' id='28' type='empty' w='98614' x='693' y='53548'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='43' h='7095' id='18' is-fixed='true' mode='slider' name='Total' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]' type='filter' w='23983' x='866' y='8615'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Distribution per borough'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[mn:DATE:ok]' type='filter' />
            <card mode='dropdown' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
                  <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                  <bucket>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814838279:qk]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[:Measure Names]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[mn:DATE:ok]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[mn:DATE:ok]' type='filter' />
            <card mode='dropdown' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[:Measure Names]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[mn:DATE:ok]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Zip code stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:ZIP CODE:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:ZIP CODE:ok]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF PERSONS KILLED:qk]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Major Cause for Accident'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:NUMBER OF PERSONS KILLED:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Monthly stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[qr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Day wise distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
                    <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]</field>
                    <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[hr:TIME:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_324259197391900673:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[hr:TIME:ok]</field>
                  <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
                  <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_324259197391900673:qk]</field>
                  <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17</value>
                <value>&quot;BRONX&quot;</value>
                <value>339</value>
                <value>5</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[hr:TIME:ok]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[qr:DATE:ok]</field>
            <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[wd:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='NYC Vehicle Collisions'>
      <viewpoints>
        <viewpoint name='Monthly stats'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Zip code stats'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Detailed Borough stats'>
      <viewpoints>
        <viewpoint name='Day wise distribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Distribution per borough'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
                      <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[:Measure Names]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Multiple Values]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[none:BOROUGH:nk]</field>
                    <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[:Measure Names]</field>
                    <field>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;BRONX&quot;</value>
                  <value>&quot;[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299814838279:qk]&quot;</value>
                  <value>1196.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Major Cause for Accident'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0pq8amk0lhmnle1e0vrsz0fktlex].[sum:Calculation_908038299813294084:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Day wise distribution' width='192'>
      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
      OYJr797uefcAqyl8yqdvg0lZsRwqrWfN9mK0GhWpsWHIsoSiCPIrGvjD6zupbmjjtrnpLKs5
      hLJ1M9Zrribk2mv63KurzF7CS/ue545pXyN9EBaOvRFoOYb73e+DsxHDFX9AnXbqBnqSzoxQ
      Avj2/Qvt+OvP+BYQQsG3/3lEZwO6BT9EUvUucEmSkWPGo0qYjL9iM97df8d3ZA2Bqu0EGosR
      LgcoflCpEWo9fkXp8ZYddgKA7jJ3NlMkK3NfITsmB5vpzHt49RdJrUZts52scy+E4KPSD9h0
      dAP3zf3OKfNiWZLJjBzFhpL1OL1Oxn9mFJI0GrQZ6bSvexelsxN99sDWA58n1Kxn9rhEZFni
      tY8KKK9tJSHKypqPi3nhgzzGpUZx35xkot9+lcDxGsLvvQfzgvl9JrV0ejp5eseTpEVkcvX4
      64cksM1fewj3O99GtsZhWPbrM87x5fBU/EffR3G1ok7uvUodgOKoxLPlt+hmfbPPt4UkScjW
      ODSjlqMedTmqqDFIshqlqQh/8Xp8ea/jL1pHx9GNVJbuQq01orfGIMmq4SUAvxI4WTwpxhrL
      CcdxdhzbxqzUuWhOMwJ8FiEE7R43iiLQ9CPbqdxeyjO7/sYNE77CzJQ5SJKE1+/nWGszJq0O
      tSxj0pqIMHXvSJIcnkqs9b/74qosFjTJyTheex2VLRxNUtI5mRXVKpnRSRFMGRXL7iMnePWj
      fNqcHr5+5SSWm7pw//MfqG0RRHzvu2hTU/ueQigKa4+8xaETB3jokp+cUid/MFBaq3Ct+Qbq
      pNnoL/s1ch+DlaQxIGmM+PY/izp9MZLh1Op/Qih4d/4V4XOjm/Ngv608kkqDbAhDZctAnTQD
      X8YyiqIX8L5IoVoTRYzRSIKnFqngTbx7n8Zfvml4CWBzeRlFTY0kh4ahUalIDEvhvaJ3UMtq
      RkWNOeO9/IrC3poqXjy0n9y6WgCizRbUpxmVHV2t/Hnr7xgdPZbrJ3wFJJnipgZWF+aztaIM
      l99HVkQUsiQRGxKPw9XK+8XrmfYZ0yiAOjKy2/L0zloME3JQhfTffNsbkiQRZjEwZ3wi2SmR
      XDk5meh922hfuQrTnNmE3/VVVCEhfXb+T9MY38p7g1um3sno6LGDbvMXSgD3xp+DrMKw/HdI
      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
    </thumbnail>
    <thumbnail height='192' name='Detailed Borough stats' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Distribution per borough' width='192'>
      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
      opECkCSa/w/4OC6NhvfKaAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Major Cause for Accident' width='192'>
      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
      gzZp8jT5d8wiQm8qEprKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly stats' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='NYC Vehicle Collisions' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Zip code stats' width='192'>
      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
      ktUDkrcgx8WPs62gyzdev349UYHGwd2M9yjoQ1vMdAgzPT0LW0abTBfjg0C1WqVSqQDDvnj9
      v2lb6M+ycnE08kSfaeyOKvFhIn1NVvnIHydojjo1NYXjOGN7gDzP21HViHHb3s58ZM562see
      RzxZ9+nfWV4Zk+jSKJVKVKvVxJ2mlEoMYDOql9V21m8TeZ6lUfdn/R53HH5c4DgO3W6XRqMB
      jFcPSHPoe+0uNXfjbQeZtTLSaoeWAuMGhPKIMW2gahQKhU0HxVWrVWzbToIw6efntZ2OB5jX
      ZpV/yWrDTJ9IX5vn6fpxg5SDg+jCMGTv3r1j7y92XfeeR4v1ucw72do5Uu6n7YAswkl7iPLs
      AP19FqIootFoJLv+NffX1dT6/f5YKkpWsl564WS5TNN9S8cOslTA9zrx3201Bc2wzp07R6lU
      GouodQ6RrpB3t9A0cTfHteZSVZYKNGqyldrYzJ5HbKb6Yi6WIAgoFAq02+3EM2MeNr0dGySt
      sqQlgubwo97F1O3TxZdMe0O386CTv+4FyuXyUFbkdqG9egcPHkSprYvh6nOVm83mXTENPac6
      M3VUoGsc5NoAGnmcTv+vByLrnlFtm6nGunSHPg1EE6rmUtuJUJsLy+yDXlhZbtt022lVz/SO
      Zb3vg7QFsnZg7QS+79/VArBtOzmQbpwM0FKpRKfTuSviN/ctax+/PjVnpxirXp6Zv2PC1K1N
      7p+3GT1roZh6t/b+aN+tJtqtdPc0dJvpzT2jFuZ2kPZCPQjo2j7ay9FoNO5a8uzUE6MN2VKp
      xMTExNjV8u6mv0IIyuVyYkNYlpXYjneDXBUoT583/097ddLqQXrLoCactErT6/WSqKJuRxu/
      5rPSnHurvpuEmo5vpLl8VsAtLSFGecbuJzSxxXFMo9Gg0+nsuPy4huM4O963q/3s58+fR0o5
      lkfH9/276rMphTUTuFvihxESIEuNGPV9muCyuH+ei9J13aSmSxRFyQnjaZVlVDt5/dNIu2iz
      vstT5cyFqa9/EKVMNPRzNcG6rntXfvSs/RnjQqsdAEeOHEmqso2CEIPKzumT48eRyFraKKWG
      Cvzeqxqnua1kpSHA5lygNPIIY9Rga86g1KCOfprzm22MuwDMe7QUMt2pGmmpohO99Hvo+8z6
      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
      vCFOsEsI8/QAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
